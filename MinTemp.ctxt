#BlueJ class context
comment0.target=MinTemp
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestTempInFile(org.apache.commons.csv.CSVParser)
comment10.params=parser\ value
comment10.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment11.params=
comment11.target=void\ testaverageTemperatureWithHighHumidityInFile()
comment12.params=
comment12.target=org.apache.commons.csv.CSVRecord\ coldestInManyDays()
comment13.params=
comment13.target=void\ testColdestInManyDays()
comment14.params=currentRow\ smallestSoFar
comment14.target=org.apache.commons.csv.CSVRecord\ getSmallestofTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=
comment3.target=void\ fileWithColdestTemperature()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ testlowestHumidityInFile()
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment7.params=
comment7.target=void\ testlowestHumidityInManyFiles()
comment8.params=parser
comment8.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment9.params=
comment9.target=void\ testaverageTemperatureInFile()
numComments=15
